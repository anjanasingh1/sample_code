{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anjan\\\\Desktop\\\\task_list\\\\ui\\\\src\\\\components\\\\Task.js\",\n  _s = $RefreshSig$();\nimport { Checkbox } from '@mui/material';\nimport React, { useState } from 'react';\nimport { Button, Typography } from '@mui/material';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport EditIcon from '@mui/icons-material/Edit';\nimport classnames from \"classnames\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Task = ({\n  task\n}) => {\n  _s();\n  const {\n    id,\n    name,\n    completed\n  } = task;\n  const [isComplete, setIsComplete] = useState(completed);\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\n  const handleUpdateTaskCompletion = () => {\n    setIsComplete(prev = !prev);\n  };\n  const handleDeleteTask = () => {\n    console.log('delete Task');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"task\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classnames(\"flex\", {\n        done: isComplete\n      }),\n      children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n        checked: isComplete,\n        onChange: handleUpdateTaskCompletion\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"taskButtons\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        onClick: () => setIsDialogOpen(true),\n        children: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 77\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        color: \"error\",\n        variant: \"contained\",\n        onClick: handleDeleteTask,\n        children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 83\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(UpdateTaskForm, {\n      isDialogOpen: setIsDialogOpen,\n      setIsDialogOpen: setIsDialogOpen,\n      task: task\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_s(Task, \"zWjhknkdZGjXRv+KyWnTI4Hui1Q=\");\n_c = Task;\nexport default Task;\nvar _c;\n$RefreshReg$(_c, \"Task\");","map":{"version":3,"names":["Checkbox","React","useState","Button","Typography","DeleteIcon","EditIcon","classnames","jsxDEV","_jsxDEV","Task","task","_s","id","name","completed","isComplete","setIsComplete","isDialogOpen","setIsDialogOpen","handleUpdateTaskCompletion","prev","handleDeleteTask","console","log","className","children","done","checked","onChange","fileName","_jsxFileName","lineNumber","columnNumber","variant","onClick","color","UpdateTaskForm","_c","$RefreshReg$"],"sources":["C:/Users/anjan/Desktop/task_list/ui/src/components/Task.js"],"sourcesContent":["import { Checkbox } from '@mui/material';\r\nimport React, { useState } from 'react';\r\nimport { Button, Typography } from '@mui/material';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport  classnames  from \"classnames\";\r\n\r\n\r\n\r\nconst Task = ({task}) => {\r\n    const {id,name,completed} =task;\r\n    const [isComplete,setIsComplete]=useState(completed);\r\n    const [isDialogOpen,setIsDialogOpen]=useState(false);\r\n    const handleUpdateTaskCompletion=()=>{\r\n        setIsComplete((prev)=!prev)\r\n    }\r\n    const handleDeleteTask=()=>{\r\n        console.log('delete Task')\r\n    }\r\n  return (\r\n    <div className='task'>\r\n        <div className={classnames(\"flex\",{done:isComplete})}>\r\n            <Checkbox checked={isComplete} onChange={handleUpdateTaskCompletion}/>\r\n            <Typography variant='h4'>{name}</Typography>\r\n        </div>\r\n        <div className='taskButtons'>\r\n            <Button variant='contained' onClick={()=>setIsDialogOpen(true)}><EditIcon/></Button>\r\n            <Button color= \"error\" variant='contained' onClick={handleDeleteTask}><DeleteIcon/></Button>\r\n        </div>\r\n        <UpdateTaskForm\r\n            isDialogOpen={setIsDialogOpen}\r\n            setIsDialogOpen={setIsDialogOpen}\r\n            task={task}\r\n        />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Task\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}